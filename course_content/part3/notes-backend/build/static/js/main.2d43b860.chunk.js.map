{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","request","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","n","map","i","key","find","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"kNAeeA,EAbF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACjB,qBAAuB,iBAEzB,OACI,wBAAIC,UAAU,QACTJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,wBCkBjC,EAtBA,WACX,IAAMK,EAAUC,IAAMC,IALV,cAMZ,OAAOF,EAAQG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAoB9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KAjBV,aAiBwBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAtBJ,aAsBI,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCV9BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACK,KAIP,yBAAKd,UAAU,SACZc,ICHHC,EAAS,WAMb,OACE,yBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAIR,6BACA,uGAqFSC,EAhFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,WAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,0BAJjC,mBAITO,EAJS,KAIKC,EAJL,KAOhBC,qBAAU,WACRC,IAEGzB,MAAK,SAAA0B,GACJT,EAASS,QAEZ,IAEL,IAyCQC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAAC,GAAC,OAAIA,EAAEpC,aAIxB,OACE,oCAAE,qCACF,kBAAC,EAAD,CAAce,QAASc,IACvB,4BAAQ1B,QAAS,kBAAMyB,GAAYD,KAAnC,QACQA,EAAU,YAAc,OAE9B,4BACGO,EAAYG,KAAI,SAACxC,EAAMyC,GAAP,OACjB,kBAAC,EAAD,CAAMC,IAAKD,EAAGzC,KAAMA,EACpBC,iBAAkB,kBAxDC,SAAAc,GACzB,IAAMf,EAAO0B,EAAMiB,MAAK,SAAAJ,GAAC,OAAIA,EAAExB,KAAOA,KAChC6B,EAAW,2BAAO5C,GAAP,IAAaG,WAAYH,EAAKG,YAE/CgC,EACQpB,EAAI6B,GAAalC,MAAK,SAAAmC,GAC5BlB,EAASD,EAAMc,KAAI,SAAAxC,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAO6C,SAEpDC,OAAM,SAAAC,GACLd,EAAgB,SAAD,OACJjC,EAAKK,QADD,sCAGf2C,YAAW,WACTf,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAC,GAAC,OAAIA,EAAExB,KAAOA,SAyCRkC,CAAmBjD,EAAKe,WAElD,0BAAMmC,SAtCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBhD,QAASuB,EACT0B,MAAM,IAAIC,MAAOC,cACjBrD,UAAWsD,KAAKC,SAAW,IAG7BvB,EACQkB,GACP3C,MAAK,SAAAmC,GACJlB,EAASD,EAAMiC,OAAOd,IACtBhB,EAAW,SA2BT,2BAAO+B,MAAOhC,EAASiC,SAtBR,SAACV,GACpBW,QAAQC,IAAIZ,EAAMa,OAAOJ,OACzB/B,EAAWsB,EAAMa,OAAOJ,UAqBpB,4BAAQK,KAAK,UAAb,SAEF,kBAAC,EAAD,QC3FNzD,IACCC,IAAI,mCACJC,MAAK,SAAAC,GACJuD,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,c","file":"static/js/main.2d43b860.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important\n    ? 'make not important' : 'make important'\n\n    return (\n        <li className='note'>\n            {note.content}\n            <button onClick={toggleImportance}>{label}</button>\n        </li>\n    )\n\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\n\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n    const nonExisting = {\n      id: 10000,\n      content: 'This note is not saved to server',\n      date: '2019-05-30T17:30:31.098Z',\n      important: true,\n    }\n    return request.then(response => response.data.concat(nonExisting))\n  }\n  \nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n  \nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }\n  ","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport Note from './Note.js'\nimport '../index.css'\nimport noteService from '../services/notes'\nimport Notification from './Notification'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('newnote')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\n\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n  \nconst toggleImportanceOf = id => {\n  const note = notes.find(n => n.id === id)\n  const changedNote = {...note, important: !note.important}\n\n  noteService\n  .update(id, changedNote).then(returnedNote => {\n    setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n  .catch(error => {\n    setErrorMessage(\n      `Note '${note.content}' was already removed from server`\n    )\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n    setNotes(notes.filter(n => n.id !== id))\n  })\n\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    noteService\n    .create(noteObject)\n    .then(returnedNote => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote('')\n    })\n\n  }\n  \n  const handleChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)}\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(n => n.important)\n\n    \n\n  return (\n    <><h1>Notes</h1>\n    <Notification message={errorMessage} />\n    <button onClick={() => setShowAll(!showAll)}>\n      show {showAll ? 'important' : 'all'}\n    </button>\n      <ul>\n        {notesToShow.map((note, i) => \n        <Note key={i} note={note}\n        toggleImportance={() => toggleImportanceOf(note.id)}/>)}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleChange}/>\n        <button type=\"submit\">save</button>\n      </form> \n      <Footer />\n      </>)}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\nimport axios from 'axios'\n\naxios\n.get('http://localhost:3001/api/notes')\n.then(response => {\n  ReactDOM.render(<App/>, document.getElementById('root'))\n})\n\n\n\n\n\n\n"],"sourceRoot":""}